import { Resolvers, MutationAddScheduleArgs } from "~/services/gql/gql-types"; // auto-generated by graphql-codegen script
import { Context } from "~/services/gql/context";
import { ScheduleService } from "./schedule-service";
import { ensureSiteId } from "../session/session-service";
import { IRuleTypeMap, isSiteAdmin } from "~/services/gql/permissions";

// add to gql-server.ts:
export const resolvers: Resolvers = {
  Query: {
    getSchedules: async (_, args, ctx: Context) => {
      const siteId = ensureSiteId(ctx);
      return await ScheduleService.findBySite(ctx, siteId);
    },
  },
  Mutation: {
    addSchedule: async (_, args: MutationAddScheduleArgs, context: Context) => {
      ScheduleService.create(context, {
        ...args.schedule,
        siteId: ensureSiteId(context),
        active: true,
      });
      return {};
    },
  },
};
export const permissions: IRuleTypeMap = {
  Query: {
    getSchedules: isSiteAdmin,
  },
  Mutation: {
    addSchedule: isSiteAdmin,
  },
};
